// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: samantra/services/working_day_service/working_day.proto

package working_day

import (
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type WorkingDayPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date       *timestamp.Timestamp `protobuf:"bytes,1,opt,name=Date,proto3" json:"Date,omitempty"`
	PlantCodes []string             `protobuf:"bytes,2,rep,name=PlantCodes,proto3" json:"PlantCodes,omitempty"`
}

func (x *WorkingDayPayload) Reset() {
	*x = WorkingDayPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samantra_services_working_day_service_working_day_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkingDayPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkingDayPayload) ProtoMessage() {}

func (x *WorkingDayPayload) ProtoReflect() protoreflect.Message {
	mi := &file_samantra_services_working_day_service_working_day_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkingDayPayload.ProtoReflect.Descriptor instead.
func (*WorkingDayPayload) Descriptor() ([]byte, []int) {
	return file_samantra_services_working_day_service_working_day_proto_rawDescGZIP(), []int{0}
}

func (x *WorkingDayPayload) GetDate() *timestamp.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *WorkingDayPayload) GetPlantCodes() []string {
	if x != nil {
		return x.PlantCodes
	}
	return nil
}

type WorkingDayInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlantCode string               `protobuf:"bytes,1,opt,name=PlantCode,proto3" json:"PlantCode,omitempty"`
	Date      *timestamp.Timestamp `protobuf:"bytes,2,opt,name=Date,proto3" json:"Date,omitempty"`
	Day       string               `protobuf:"bytes,3,opt,name=Day,proto3" json:"Day,omitempty"`
	IsWork    bool                 `protobuf:"varint,4,opt,name=IsWork,proto3" json:"IsWork,omitempty"`
}

func (x *WorkingDayInfo) Reset() {
	*x = WorkingDayInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samantra_services_working_day_service_working_day_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkingDayInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkingDayInfo) ProtoMessage() {}

func (x *WorkingDayInfo) ProtoReflect() protoreflect.Message {
	mi := &file_samantra_services_working_day_service_working_day_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkingDayInfo.ProtoReflect.Descriptor instead.
func (*WorkingDayInfo) Descriptor() ([]byte, []int) {
	return file_samantra_services_working_day_service_working_day_proto_rawDescGZIP(), []int{1}
}

func (x *WorkingDayInfo) GetPlantCode() string {
	if x != nil {
		return x.PlantCode
	}
	return ""
}

func (x *WorkingDayInfo) GetDate() *timestamp.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *WorkingDayInfo) GetDay() string {
	if x != nil {
		return x.Day
	}
	return ""
}

func (x *WorkingDayInfo) GetIsWork() bool {
	if x != nil {
		return x.IsWork
	}
	return false
}

type WorkingDayGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlantCode   string            `protobuf:"bytes,1,opt,name=PlantCode,proto3" json:"PlantCode,omitempty"`
	WorkingDays []*WorkingDayInfo `protobuf:"bytes,2,rep,name=WorkingDays,proto3" json:"WorkingDays,omitempty"`
}

func (x *WorkingDayGroup) Reset() {
	*x = WorkingDayGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samantra_services_working_day_service_working_day_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkingDayGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkingDayGroup) ProtoMessage() {}

func (x *WorkingDayGroup) ProtoReflect() protoreflect.Message {
	mi := &file_samantra_services_working_day_service_working_day_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkingDayGroup.ProtoReflect.Descriptor instead.
func (*WorkingDayGroup) Descriptor() ([]byte, []int) {
	return file_samantra_services_working_day_service_working_day_proto_rawDescGZIP(), []int{2}
}

func (x *WorkingDayGroup) GetPlantCode() string {
	if x != nil {
		return x.PlantCode
	}
	return ""
}

func (x *WorkingDayGroup) GetWorkingDays() []*WorkingDayInfo {
	if x != nil {
		return x.WorkingDays
	}
	return nil
}

type WorkingDayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkingDayGroups []*WorkingDayGroup `protobuf:"bytes,1,rep,name=WorkingDayGroups,proto3" json:"WorkingDayGroups,omitempty"`
}

func (x *WorkingDayResponse) Reset() {
	*x = WorkingDayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samantra_services_working_day_service_working_day_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkingDayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkingDayResponse) ProtoMessage() {}

func (x *WorkingDayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_samantra_services_working_day_service_working_day_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkingDayResponse.ProtoReflect.Descriptor instead.
func (*WorkingDayResponse) Descriptor() ([]byte, []int) {
	return file_samantra_services_working_day_service_working_day_proto_rawDescGZIP(), []int{3}
}

func (x *WorkingDayResponse) GetWorkingDayGroups() []*WorkingDayGroup {
	if x != nil {
		return x.WorkingDayGroups
	}
	return nil
}

var File_samantra_services_working_day_service_working_day_proto protoreflect.FileDescriptor

var file_samantra_services_working_day_service_working_day_proto_rawDesc = []byte{
	0x0a, 0x37, 0x73, 0x61, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x79, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f,
	0x64, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x73, 0x61, 0x6d, 0x61, 0x6e,
	0x74, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x79, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x63, 0x0a, 0x11, 0x57, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2e,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x88,
	0x01, 0x0a, 0x0e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x2e, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x44, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x44, 0x61,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x49, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x22, 0x80, 0x01, 0x0a, 0x0f, 0x57, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1c, 0x0a,
	0x09, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x4f, 0x0a, 0x0b, 0x57,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x73, 0x61, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x79,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0b, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x73, 0x22, 0x70, 0x0a, 0x12,
	0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5a, 0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73,
	0x61, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x79, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x10, 0x57, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x32, 0x9b,
	0x01, 0x0a, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x12, 0x8c, 0x01,
	0x0a, 0x23, 0x47, 0x65, 0x74, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44,
	0x61, 0x79, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x6e, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x5f, 0x64, 0x61, 0x79, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x61, 0x6e, 0x74,
	0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x79, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44,
	0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x68, 0x5a, 0x66,
	0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x69, 0x74, 0x64, 0x69,
	0x67, 0x69, 0x74, 0x61, 0x6c, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x67, 0x69, 0x74, 0x2f, 0x73, 0x61, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x64,
	0x61, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3b, 0x77, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x5f, 0x64, 0x61, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_samantra_services_working_day_service_working_day_proto_rawDescOnce sync.Once
	file_samantra_services_working_day_service_working_day_proto_rawDescData = file_samantra_services_working_day_service_working_day_proto_rawDesc
)

func file_samantra_services_working_day_service_working_day_proto_rawDescGZIP() []byte {
	file_samantra_services_working_day_service_working_day_proto_rawDescOnce.Do(func() {
		file_samantra_services_working_day_service_working_day_proto_rawDescData = protoimpl.X.CompressGZIP(file_samantra_services_working_day_service_working_day_proto_rawDescData)
	})
	return file_samantra_services_working_day_service_working_day_proto_rawDescData
}

var file_samantra_services_working_day_service_working_day_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_samantra_services_working_day_service_working_day_proto_goTypes = []interface{}{
	(*WorkingDayPayload)(nil),   // 0: samantra.services.working_day.WorkingDayPayload
	(*WorkingDayInfo)(nil),      // 1: samantra.services.working_day.WorkingDayInfo
	(*WorkingDayGroup)(nil),     // 2: samantra.services.working_day.WorkingDayGroup
	(*WorkingDayResponse)(nil),  // 3: samantra.services.working_day.WorkingDayResponse
	(*timestamp.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_samantra_services_working_day_service_working_day_proto_depIdxs = []int32{
	4, // 0: samantra.services.working_day.WorkingDayPayload.Date:type_name -> google.protobuf.Timestamp
	4, // 1: samantra.services.working_day.WorkingDayInfo.Date:type_name -> google.protobuf.Timestamp
	1, // 2: samantra.services.working_day.WorkingDayGroup.WorkingDays:type_name -> samantra.services.working_day.WorkingDayInfo
	2, // 3: samantra.services.working_day.WorkingDayResponse.WorkingDayGroups:type_name -> samantra.services.working_day.WorkingDayGroup
	0, // 4: samantra.services.working_day.WorkingDay.GetGetWorkingDayByDateAndPlantCodes:input_type -> samantra.services.working_day.WorkingDayPayload
	3, // 5: samantra.services.working_day.WorkingDay.GetGetWorkingDayByDateAndPlantCodes:output_type -> samantra.services.working_day.WorkingDayResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_samantra_services_working_day_service_working_day_proto_init() }
func file_samantra_services_working_day_service_working_day_proto_init() {
	if File_samantra_services_working_day_service_working_day_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_samantra_services_working_day_service_working_day_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkingDayPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samantra_services_working_day_service_working_day_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkingDayInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samantra_services_working_day_service_working_day_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkingDayGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samantra_services_working_day_service_working_day_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkingDayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_samantra_services_working_day_service_working_day_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_samantra_services_working_day_service_working_day_proto_goTypes,
		DependencyIndexes: file_samantra_services_working_day_service_working_day_proto_depIdxs,
		MessageInfos:      file_samantra_services_working_day_service_working_day_proto_msgTypes,
	}.Build()
	File_samantra_services_working_day_service_working_day_proto = out.File
	file_samantra_services_working_day_service_working_day_proto_rawDesc = nil
	file_samantra_services_working_day_service_working_day_proto_goTypes = nil
	file_samantra_services_working_day_service_working_day_proto_depIdxs = nil
}
