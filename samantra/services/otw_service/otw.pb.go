// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: samantra/services/otw_service/otw.proto

package otw

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListOTWPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestDate *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=RequestDate,proto3" json:"RequestDate,omitempty"`
}

func (x *ListOTWPayload) Reset() {
	*x = ListOTWPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samantra_services_otw_service_otw_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOTWPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOTWPayload) ProtoMessage() {}

func (x *ListOTWPayload) ProtoReflect() protoreflect.Message {
	mi := &file_samantra_services_otw_service_otw_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOTWPayload.ProtoReflect.Descriptor instead.
func (*ListOTWPayload) Descriptor() ([]byte, []int) {
	return file_samantra_services_otw_service_otw_proto_rawDescGZIP(), []int{0}
}

func (x *ListOTWPayload) GetRequestDate() *timestamppb.Timestamp {
	if x != nil {
		return x.RequestDate
	}
	return nil
}

type ListOTWResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListOTW []*OTWItem `protobuf:"bytes,1,rep,name=ListOTW,proto3" json:"ListOTW,omitempty"`
}

func (x *ListOTWResponse) Reset() {
	*x = ListOTWResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samantra_services_otw_service_otw_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOTWResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOTWResponse) ProtoMessage() {}

func (x *ListOTWResponse) ProtoReflect() protoreflect.Message {
	mi := &file_samantra_services_otw_service_otw_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOTWResponse.ProtoReflect.Descriptor instead.
func (*ListOTWResponse) Descriptor() ([]byte, []int) {
	return file_samantra_services_otw_service_otw_proto_rawDescGZIP(), []int{1}
}

func (x *ListOTWResponse) GetListOTW() []*OTWItem {
	if x != nil {
		return x.ListOTW
	}
	return nil
}

type OTWItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductCode             string                 `protobuf:"bytes,1,opt,name=ProductCode,proto3" json:"ProductCode,omitempty"`
	ProductName             string                 `protobuf:"bytes,2,opt,name=ProductName,proto3" json:"ProductName,omitempty"`
	Operation               string                 `protobuf:"bytes,3,opt,name=Operation,proto3" json:"Operation,omitempty"`
	SubOperation            string                 `protobuf:"bytes,4,opt,name=SubOperation,proto3" json:"SubOperation,omitempty"`
	FromLocation            string                 `protobuf:"bytes,5,opt,name=FromLocation,proto3" json:"FromLocation,omitempty"`
	FromLocationPlantId     int64                  `protobuf:"varint,6,opt,name=FromLocationPlantId,proto3" json:"FromLocationPlantId,omitempty"`
	DeliveryLocation        string                 `protobuf:"bytes,7,opt,name=DeliveryLocation,proto3" json:"DeliveryLocation,omitempty"`
	DeliveryLocationPlantId int64                  `protobuf:"varint,8,opt,name=DeliveryLocationPlantId,proto3" json:"DeliveryLocationPlantId,omitempty"`
	RouteQuotaWGH           float64                `protobuf:"fixed64,9,opt,name=RouteQuotaWGH,proto3" json:"RouteQuotaWGH,omitempty"`
	LotNO                   string                 `protobuf:"bytes,10,opt,name=LotNO,proto3" json:"LotNO,omitempty"`
	RouteEXT                string                 `protobuf:"bytes,11,opt,name=RouteEXT,proto3" json:"RouteEXT,omitempty"`
	APTNo                   int64                  `protobuf:"varint,12,opt,name=APTNo,proto3" json:"APTNo,omitempty"`
	VehicleCode             string                 `protobuf:"bytes,13,opt,name=VehicleCode,proto3" json:"VehicleCode,omitempty"`
	Arrived                 string                 `protobuf:"bytes,14,opt,name=Arrived,proto3" json:"Arrived,omitempty"`
	SrcGrossTime            *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=SrcGrossTime,proto3" json:"SrcGrossTime,omitempty"`
	Weight                  float64                `protobuf:"fixed64,16,opt,name=Weight,proto3" json:"Weight,omitempty"`
	Valid                   bool                   `protobuf:"varint,17,opt,name=Valid,proto3" json:"Valid,omitempty"`
}

func (x *OTWItem) Reset() {
	*x = OTWItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samantra_services_otw_service_otw_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OTWItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTWItem) ProtoMessage() {}

func (x *OTWItem) ProtoReflect() protoreflect.Message {
	mi := &file_samantra_services_otw_service_otw_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTWItem.ProtoReflect.Descriptor instead.
func (*OTWItem) Descriptor() ([]byte, []int) {
	return file_samantra_services_otw_service_otw_proto_rawDescGZIP(), []int{2}
}

func (x *OTWItem) GetProductCode() string {
	if x != nil {
		return x.ProductCode
	}
	return ""
}

func (x *OTWItem) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *OTWItem) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *OTWItem) GetSubOperation() string {
	if x != nil {
		return x.SubOperation
	}
	return ""
}

func (x *OTWItem) GetFromLocation() string {
	if x != nil {
		return x.FromLocation
	}
	return ""
}

func (x *OTWItem) GetFromLocationPlantId() int64 {
	if x != nil {
		return x.FromLocationPlantId
	}
	return 0
}

func (x *OTWItem) GetDeliveryLocation() string {
	if x != nil {
		return x.DeliveryLocation
	}
	return ""
}

func (x *OTWItem) GetDeliveryLocationPlantId() int64 {
	if x != nil {
		return x.DeliveryLocationPlantId
	}
	return 0
}

func (x *OTWItem) GetRouteQuotaWGH() float64 {
	if x != nil {
		return x.RouteQuotaWGH
	}
	return 0
}

func (x *OTWItem) GetLotNO() string {
	if x != nil {
		return x.LotNO
	}
	return ""
}

func (x *OTWItem) GetRouteEXT() string {
	if x != nil {
		return x.RouteEXT
	}
	return ""
}

func (x *OTWItem) GetAPTNo() int64 {
	if x != nil {
		return x.APTNo
	}
	return 0
}

func (x *OTWItem) GetVehicleCode() string {
	if x != nil {
		return x.VehicleCode
	}
	return ""
}

func (x *OTWItem) GetArrived() string {
	if x != nil {
		return x.Arrived
	}
	return ""
}

func (x *OTWItem) GetSrcGrossTime() *timestamppb.Timestamp {
	if x != nil {
		return x.SrcGrossTime
	}
	return nil
}

func (x *OTWItem) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *OTWItem) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

var File_samantra_services_otw_service_otw_proto protoreflect.FileDescriptor

var file_samantra_services_otw_service_otw_proto_rawDesc = []byte{
	0x0a, 0x27, 0x73, 0x61, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2f, 0x6f, 0x74, 0x77, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f,
	0x6f, 0x74, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x73, 0x61, 0x6d, 0x61, 0x6e,
	0x74, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6f, 0x74, 0x77,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x4e, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x54, 0x57, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x3c, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x22, 0x4b, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x54, 0x57, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x54, 0x57, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x61, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6f, 0x74, 0x77, 0x2e, 0x4f, 0x54,
	0x57, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x54, 0x57, 0x22, 0xe3,
	0x04, 0x0a, 0x07, 0x4f, 0x54, 0x57, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c,
	0x53, 0x75, 0x62, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x53, 0x75, 0x62, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x22, 0x0a, 0x0c, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x13, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x13, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6c, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x17, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x57, 0x47, 0x48, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0d, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x57,
	0x47, 0x48, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x6f, 0x74, 0x4e, 0x4f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x4c, 0x6f, 0x74, 0x4e, 0x4f, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x45, 0x58, 0x54, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x45, 0x58, 0x54, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x50, 0x54, 0x4e, 0x6f, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x41, 0x50, 0x54, 0x4e, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x41, 0x72, 0x72, 0x69, 0x76, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41,
	0x72, 0x72, 0x69, 0x76, 0x65, 0x64, 0x12, 0x3e, 0x0a, 0x0c, 0x53, 0x72, 0x63, 0x47, 0x72, 0x6f,
	0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x53, 0x72, 0x63, 0x47, 0x72, 0x6f,
	0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x32, 0x61, 0x0a, 0x03, 0x4f, 0x54, 0x57, 0x12, 0x5a, 0x0a, 0x07, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x74, 0x77, 0x12, 0x25, 0x2e, 0x73, 0x61, 0x6d, 0x61, 0x6e, 0x74, 0x72,
	0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6f, 0x74, 0x77, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x54, 0x57, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x26, 0x2e,
	0x73, 0x61, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x6f, 0x74, 0x77, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x54, 0x57, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x58, 0x5a, 0x56, 0x67, 0x69, 0x74, 0x6c, 0x61,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x69, 0x74, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c,
	0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x72,
	0x70, 0x63, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x69, 0x74, 0x2f,
	0x73, 0x61, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2f, 0x6f, 0x74, 0x77, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3b, 0x6f, 0x74,
	0x77, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_samantra_services_otw_service_otw_proto_rawDescOnce sync.Once
	file_samantra_services_otw_service_otw_proto_rawDescData = file_samantra_services_otw_service_otw_proto_rawDesc
)

func file_samantra_services_otw_service_otw_proto_rawDescGZIP() []byte {
	file_samantra_services_otw_service_otw_proto_rawDescOnce.Do(func() {
		file_samantra_services_otw_service_otw_proto_rawDescData = protoimpl.X.CompressGZIP(file_samantra_services_otw_service_otw_proto_rawDescData)
	})
	return file_samantra_services_otw_service_otw_proto_rawDescData
}

var file_samantra_services_otw_service_otw_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_samantra_services_otw_service_otw_proto_goTypes = []interface{}{
	(*ListOTWPayload)(nil),        // 0: samantra.services.otw.ListOTWPayload
	(*ListOTWResponse)(nil),       // 1: samantra.services.otw.ListOTWResponse
	(*OTWItem)(nil),               // 2: samantra.services.otw.OTWItem
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_samantra_services_otw_service_otw_proto_depIdxs = []int32{
	3, // 0: samantra.services.otw.ListOTWPayload.RequestDate:type_name -> google.protobuf.Timestamp
	2, // 1: samantra.services.otw.ListOTWResponse.ListOTW:type_name -> samantra.services.otw.OTWItem
	3, // 2: samantra.services.otw.OTWItem.SrcGrossTime:type_name -> google.protobuf.Timestamp
	0, // 3: samantra.services.otw.OTW.ListOtw:input_type -> samantra.services.otw.ListOTWPayload
	1, // 4: samantra.services.otw.OTW.ListOtw:output_type -> samantra.services.otw.ListOTWResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_samantra_services_otw_service_otw_proto_init() }
func file_samantra_services_otw_service_otw_proto_init() {
	if File_samantra_services_otw_service_otw_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_samantra_services_otw_service_otw_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOTWPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samantra_services_otw_service_otw_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOTWResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samantra_services_otw_service_otw_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OTWItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_samantra_services_otw_service_otw_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_samantra_services_otw_service_otw_proto_goTypes,
		DependencyIndexes: file_samantra_services_otw_service_otw_proto_depIdxs,
		MessageInfos:      file_samantra_services_otw_service_otw_proto_msgTypes,
	}.Build()
	File_samantra_services_otw_service_otw_proto = out.File
	file_samantra_services_otw_service_otw_proto_rawDesc = nil
	file_samantra_services_otw_service_otw_proto_goTypes = nil
	file_samantra_services_otw_service_otw_proto_depIdxs = nil
}
