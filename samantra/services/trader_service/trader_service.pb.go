// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: trader_service.proto

// import "samantra/services/master_service/master.proto";

package trader

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TraderIDPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraderID int32 `protobuf:"varint,1,opt,name=traderID,proto3" json:"traderID,omitempty"`
}

func (x *TraderIDPayload) Reset() {
	*x = TraderIDPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trader_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TraderIDPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraderIDPayload) ProtoMessage() {}

func (x *TraderIDPayload) ProtoReflect() protoreflect.Message {
	mi := &file_trader_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraderIDPayload.ProtoReflect.Descriptor instead.
func (*TraderIDPayload) Descriptor() ([]byte, []int) {
	return file_trader_service_proto_rawDescGZIP(), []int{0}
}

func (x *TraderIDPayload) GetTraderID() int32 {
	if x != nil {
		return x.TraderID
	}
	return 0
}

type TraderIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        int32  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Code      string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	NameShort string `protobuf:"bytes,3,opt,name=nameShort,proto3" json:"nameShort,omitempty"`
	NameEN    string `protobuf:"bytes,4,opt,name=nameEN,proto3" json:"nameEN,omitempty"`
	NameTH    string `protobuf:"bytes,5,opt,name=nameTH,proto3" json:"nameTH,omitempty"`
	Status    int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	Type      string `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	IsCPT     bool   `protobuf:"varint,8,opt,name=isCPT,proto3" json:"isCPT,omitempty"`
	IsDeal    bool   `protobuf:"varint,9,opt,name=isDeal,proto3" json:"isDeal,omitempty"`
}

func (x *TraderIDResponse) Reset() {
	*x = TraderIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trader_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TraderIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraderIDResponse) ProtoMessage() {}

func (x *TraderIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trader_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraderIDResponse.ProtoReflect.Descriptor instead.
func (*TraderIDResponse) Descriptor() ([]byte, []int) {
	return file_trader_service_proto_rawDescGZIP(), []int{1}
}

func (x *TraderIDResponse) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *TraderIDResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TraderIDResponse) GetNameShort() string {
	if x != nil {
		return x.NameShort
	}
	return ""
}

func (x *TraderIDResponse) GetNameEN() string {
	if x != nil {
		return x.NameEN
	}
	return ""
}

func (x *TraderIDResponse) GetNameTH() string {
	if x != nil {
		return x.NameTH
	}
	return ""
}

func (x *TraderIDResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TraderIDResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TraderIDResponse) GetIsCPT() bool {
	if x != nil {
		return x.IsCPT
	}
	return false
}

func (x *TraderIDResponse) GetIsDeal() bool {
	if x != nil {
		return x.IsDeal
	}
	return false
}

var File_trader_service_proto protoreflect.FileDescriptor

var file_trader_service_proto_rawDesc = []byte{
	0x0a, 0x14, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x73, 0x61, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72,
	0x22, 0x2d, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x22,
	0xde, 0x01, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x45, 0x4e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x45, 0x4e, 0x12, 0x16,
	0x0a, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x54, 0x48, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6e, 0x61, 0x6d, 0x65, 0x54, 0x48, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x43, 0x50, 0x54, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x69, 0x73, 0x43, 0x50, 0x54, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x44, 0x65,
	0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x44, 0x65, 0x61, 0x6c,
	0x32, 0x72, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x61, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x29, 0x2e,
	0x73, 0x61, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x49,
	0x44, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x2a, 0x2e, 0x73, 0x61, 0x6d, 0x61, 0x6e,
	0x74, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x5e, 0x5a, 0x5c, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x66, 0x69, 0x74, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x2f, 0x64, 0x69,
	0x67, 0x69, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x69, 0x74, 0x2f, 0x73, 0x61, 0x6d,
	0x61, 0x6e, 0x74, 0x72, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3b, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_trader_service_proto_rawDescOnce sync.Once
	file_trader_service_proto_rawDescData = file_trader_service_proto_rawDesc
)

func file_trader_service_proto_rawDescGZIP() []byte {
	file_trader_service_proto_rawDescOnce.Do(func() {
		file_trader_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_trader_service_proto_rawDescData)
	})
	return file_trader_service_proto_rawDescData
}

var file_trader_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_trader_service_proto_goTypes = []interface{}{
	(*TraderIDPayload)(nil),  // 0: samantra.services.trader.TraderIDPayload
	(*TraderIDResponse)(nil), // 1: samantra.services.trader.TraderIDResponse
}
var file_trader_service_proto_depIdxs = []int32{
	0, // 0: samantra.services.trader.TraderService.TraderID:input_type -> samantra.services.trader.TraderIDPayload
	1, // 1: samantra.services.trader.TraderService.TraderID:output_type -> samantra.services.trader.TraderIDResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_trader_service_proto_init() }
func file_trader_service_proto_init() {
	if File_trader_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_trader_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TraderIDPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trader_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TraderIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_trader_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_trader_service_proto_goTypes,
		DependencyIndexes: file_trader_service_proto_depIdxs,
		MessageInfos:      file_trader_service_proto_msgTypes,
	}.Build()
	File_trader_service_proto = out.File
	file_trader_service_proto_rawDesc = nil
	file_trader_service_proto_goTypes = nil
	file_trader_service_proto_depIdxs = nil
}
