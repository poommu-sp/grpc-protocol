// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: samantra/services/rm1_services/rm1.proto

package rm1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListOSLotInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date      *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	QuotaType string                 `protobuf:"bytes,2,opt,name=quotaType,proto3" json:"quotaType,omitempty"`
}

func (x *ListOSLotInfoRequest) Reset() {
	*x = ListOSLotInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samantra_services_rm1_services_rm1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOSLotInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOSLotInfoRequest) ProtoMessage() {}

func (x *ListOSLotInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_samantra_services_rm1_services_rm1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOSLotInfoRequest.ProtoReflect.Descriptor instead.
func (*ListOSLotInfoRequest) Descriptor() ([]byte, []int) {
	return file_samantra_services_rm1_services_rm1_proto_rawDescGZIP(), []int{0}
}

func (x *ListOSLotInfoRequest) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *ListOSLotInfoRequest) GetQuotaType() string {
	if x != nil {
		return x.QuotaType
	}
	return ""
}

type ListOSLotInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OSLotInfos []*OSLotInfo `protobuf:"bytes,1,rep,name=OSLotInfos,proto3" json:"OSLotInfos,omitempty"`
}

func (x *ListOSLotInfoResponse) Reset() {
	*x = ListOSLotInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samantra_services_rm1_services_rm1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOSLotInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOSLotInfoResponse) ProtoMessage() {}

func (x *ListOSLotInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_samantra_services_rm1_services_rm1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOSLotInfoResponse.ProtoReflect.Descriptor instead.
func (*ListOSLotInfoResponse) Descriptor() ([]byte, []int) {
	return file_samantra_services_rm1_services_rm1_proto_rawDescGZIP(), []int{1}
}

func (x *ListOSLotInfoResponse) GetOSLotInfos() []*OSLotInfo {
	if x != nil {
		return x.OSLotInfos
	}
	return nil
}

type OSLotInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LotNo              string  `protobuf:"bytes,1,opt,name=LotNo,proto3" json:"LotNo,omitempty"`
	Price              float32 `protobuf:"fixed32,2,opt,name=Price,proto3" json:"Price,omitempty"`
	ExchangeRate       float32 `protobuf:"fixed32,3,opt,name=ExchangeRate,proto3" json:"ExchangeRate,omitempty"`
	IncludingTransport float32 `protobuf:"fixed32,4,opt,name=IncludingTransport,proto3" json:"IncludingTransport,omitempty"`
	PONO               string  `protobuf:"bytes,5,opt,name=PONO,proto3" json:"PONO,omitempty"`
}

func (x *OSLotInfo) Reset() {
	*x = OSLotInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samantra_services_rm1_services_rm1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OSLotInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSLotInfo) ProtoMessage() {}

func (x *OSLotInfo) ProtoReflect() protoreflect.Message {
	mi := &file_samantra_services_rm1_services_rm1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSLotInfo.ProtoReflect.Descriptor instead.
func (*OSLotInfo) Descriptor() ([]byte, []int) {
	return file_samantra_services_rm1_services_rm1_proto_rawDescGZIP(), []int{2}
}

func (x *OSLotInfo) GetLotNo() string {
	if x != nil {
		return x.LotNo
	}
	return ""
}

func (x *OSLotInfo) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OSLotInfo) GetExchangeRate() float32 {
	if x != nil {
		return x.ExchangeRate
	}
	return 0
}

func (x *OSLotInfo) GetIncludingTransport() float32 {
	if x != nil {
		return x.IncludingTransport
	}
	return 0
}

func (x *OSLotInfo) GetPONO() string {
	if x != nil {
		return x.PONO
	}
	return ""
}

type ListRM1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RM1OutsideWarehouses []*RM1OutsideWarehouse `protobuf:"bytes,1,rep,name=RM1OutsideWarehouses,proto3" json:"RM1OutsideWarehouses,omitempty"`
}

func (x *ListRM1Response) Reset() {
	*x = ListRM1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samantra_services_rm1_services_rm1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRM1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRM1Response) ProtoMessage() {}

func (x *ListRM1Response) ProtoReflect() protoreflect.Message {
	mi := &file_samantra_services_rm1_services_rm1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRM1Response.ProtoReflect.Descriptor instead.
func (*ListRM1Response) Descriptor() ([]byte, []int) {
	return file_samantra_services_rm1_services_rm1_proto_rawDescGZIP(), []int{3}
}

func (x *ListRM1Response) GetRM1OutsideWarehouses() []*RM1OutsideWarehouse {
	if x != nil {
		return x.RM1OutsideWarehouses
	}
	return nil
}

type RM1OutsideWarehouse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID               string  `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	ReceivedDate     string  `protobuf:"bytes,2,opt,name=ReceivedDate,proto3" json:"ReceivedDate,omitempty"`
	ReceivedTime     string  `protobuf:"bytes,3,opt,name=ReceivedTime,proto3" json:"ReceivedTime,omitempty"`
	QuotaType        string  `protobuf:"bytes,4,opt,name=QuotaType,proto3" json:"QuotaType,omitempty"`
	PODocNo          string  `protobuf:"bytes,5,opt,name=PODocNo,proto3" json:"PODocNo,omitempty"`
	LotNo            string  `protobuf:"bytes,6,opt,name=LotNo,proto3" json:"LotNo,omitempty"`
	ProductGroup     string  `protobuf:"bytes,7,opt,name=ProductGroup,proto3" json:"ProductGroup,omitempty"`
	ProductGroupName string  `protobuf:"bytes,8,opt,name=ProductGroupName,proto3" json:"ProductGroupName,omitempty"`
	ProductCode      string  `protobuf:"bytes,9,opt,name=ProductCode,proto3" json:"ProductCode,omitempty"`
	ProductName      string  `protobuf:"bytes,10,opt,name=ProductName,proto3" json:"ProductName,omitempty"`
	InvoiceNo        string  `protobuf:"bytes,11,opt,name=InvoiceNo,proto3" json:"InvoiceNo,omitempty"`
	VendorCode       string  `protobuf:"bytes,12,opt,name=VendorCode,proto3" json:"VendorCode,omitempty"`
	VendorName       string  `protobuf:"bytes,13,opt,name=VendorName,proto3" json:"VendorName,omitempty"`
	QuotaQty         float32 `protobuf:"fixed32,14,opt,name=QuotaQty,proto3" json:"QuotaQty,omitempty"`
	QuotaWghAgro     float32 `protobuf:"fixed32,15,opt,name=QuotaWghAgro,proto3" json:"QuotaWghAgro,omitempty"`
	ContainerQtyAgro float32 `protobuf:"fixed32,16,opt,name=ContainerQtyAgro,proto3" json:"ContainerQtyAgro,omitempty"`
	ETDDate          string  `protobuf:"bytes,17,opt,name=ETDDate,proto3" json:"ETDDate,omitempty"`
	ETADate          string  `protobuf:"bytes,18,opt,name=ETADate,proto3" json:"ETADate,omitempty"`
	PackTypeCode     string  `protobuf:"bytes,19,opt,name=PackTypeCode,proto3" json:"PackTypeCode,omitempty"`
	ContainerClass   string  `protobuf:"bytes,20,opt,name=ContainerClass,proto3" json:"ContainerClass,omitempty"`
	PackingCode      string  `protobuf:"bytes,21,opt,name=PackingCode,proto3" json:"PackingCode,omitempty"`
	TraderCode       string  `protobuf:"bytes,22,opt,name=TraderCode,proto3" json:"TraderCode,omitempty"`
	PortCode         string  `protobuf:"bytes,23,opt,name=PortCode,proto3" json:"PortCode,omitempty"`
	PortName         string  `protobuf:"bytes,24,opt,name=PortName,proto3" json:"PortName,omitempty"`
	VesselName       string  `protobuf:"bytes,25,opt,name=VesselName,proto3" json:"VesselName,omitempty"`
	QuotaWghAqua     float32 `protobuf:"fixed32,26,opt,name=QuotaWghAqua,proto3" json:"QuotaWghAqua,omitempty"`
	ContainerQtyAqua float32 `protobuf:"fixed32,27,opt,name=ContainerQtyAqua,proto3" json:"ContainerQtyAqua,omitempty"`
	QuotaWghPo       float32 `protobuf:"fixed32,28,opt,name=QuotaWghPo,proto3" json:"QuotaWghPo,omitempty"`
	ContainerQtyPo   float32 `protobuf:"fixed32,29,opt,name=ContainerQtyPo,proto3" json:"ContainerQtyPo,omitempty"`
	QuotaWghSwt      float32 `protobuf:"fixed32,30,opt,name=QuotaWghSwt,proto3" json:"QuotaWghSwt,omitempty"`
	ContainerQtySwt  float32 `protobuf:"fixed32,31,opt,name=ContainerQtySwt,proto3" json:"ContainerQtySwt,omitempty"`
}

func (x *RM1OutsideWarehouse) Reset() {
	*x = RM1OutsideWarehouse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samantra_services_rm1_services_rm1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RM1OutsideWarehouse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RM1OutsideWarehouse) ProtoMessage() {}

func (x *RM1OutsideWarehouse) ProtoReflect() protoreflect.Message {
	mi := &file_samantra_services_rm1_services_rm1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RM1OutsideWarehouse.ProtoReflect.Descriptor instead.
func (*RM1OutsideWarehouse) Descriptor() ([]byte, []int) {
	return file_samantra_services_rm1_services_rm1_proto_rawDescGZIP(), []int{4}
}

func (x *RM1OutsideWarehouse) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *RM1OutsideWarehouse) GetReceivedDate() string {
	if x != nil {
		return x.ReceivedDate
	}
	return ""
}

func (x *RM1OutsideWarehouse) GetReceivedTime() string {
	if x != nil {
		return x.ReceivedTime
	}
	return ""
}

func (x *RM1OutsideWarehouse) GetQuotaType() string {
	if x != nil {
		return x.QuotaType
	}
	return ""
}

func (x *RM1OutsideWarehouse) GetPODocNo() string {
	if x != nil {
		return x.PODocNo
	}
	return ""
}

func (x *RM1OutsideWarehouse) GetLotNo() string {
	if x != nil {
		return x.LotNo
	}
	return ""
}

func (x *RM1OutsideWarehouse) GetProductGroup() string {
	if x != nil {
		return x.ProductGroup
	}
	return ""
}

func (x *RM1OutsideWarehouse) GetProductGroupName() string {
	if x != nil {
		return x.ProductGroupName
	}
	return ""
}

func (x *RM1OutsideWarehouse) GetProductCode() string {
	if x != nil {
		return x.ProductCode
	}
	return ""
}

func (x *RM1OutsideWarehouse) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *RM1OutsideWarehouse) GetInvoiceNo() string {
	if x != nil {
		return x.InvoiceNo
	}
	return ""
}

func (x *RM1OutsideWarehouse) GetVendorCode() string {
	if x != nil {
		return x.VendorCode
	}
	return ""
}

func (x *RM1OutsideWarehouse) GetVendorName() string {
	if x != nil {
		return x.VendorName
	}
	return ""
}

func (x *RM1OutsideWarehouse) GetQuotaQty() float32 {
	if x != nil {
		return x.QuotaQty
	}
	return 0
}

func (x *RM1OutsideWarehouse) GetQuotaWghAgro() float32 {
	if x != nil {
		return x.QuotaWghAgro
	}
	return 0
}

func (x *RM1OutsideWarehouse) GetContainerQtyAgro() float32 {
	if x != nil {
		return x.ContainerQtyAgro
	}
	return 0
}

func (x *RM1OutsideWarehouse) GetETDDate() string {
	if x != nil {
		return x.ETDDate
	}
	return ""
}

func (x *RM1OutsideWarehouse) GetETADate() string {
	if x != nil {
		return x.ETADate
	}
	return ""
}

func (x *RM1OutsideWarehouse) GetPackTypeCode() string {
	if x != nil {
		return x.PackTypeCode
	}
	return ""
}

func (x *RM1OutsideWarehouse) GetContainerClass() string {
	if x != nil {
		return x.ContainerClass
	}
	return ""
}

func (x *RM1OutsideWarehouse) GetPackingCode() string {
	if x != nil {
		return x.PackingCode
	}
	return ""
}

func (x *RM1OutsideWarehouse) GetTraderCode() string {
	if x != nil {
		return x.TraderCode
	}
	return ""
}

func (x *RM1OutsideWarehouse) GetPortCode() string {
	if x != nil {
		return x.PortCode
	}
	return ""
}

func (x *RM1OutsideWarehouse) GetPortName() string {
	if x != nil {
		return x.PortName
	}
	return ""
}

func (x *RM1OutsideWarehouse) GetVesselName() string {
	if x != nil {
		return x.VesselName
	}
	return ""
}

func (x *RM1OutsideWarehouse) GetQuotaWghAqua() float32 {
	if x != nil {
		return x.QuotaWghAqua
	}
	return 0
}

func (x *RM1OutsideWarehouse) GetContainerQtyAqua() float32 {
	if x != nil {
		return x.ContainerQtyAqua
	}
	return 0
}

func (x *RM1OutsideWarehouse) GetQuotaWghPo() float32 {
	if x != nil {
		return x.QuotaWghPo
	}
	return 0
}

func (x *RM1OutsideWarehouse) GetContainerQtyPo() float32 {
	if x != nil {
		return x.ContainerQtyPo
	}
	return 0
}

func (x *RM1OutsideWarehouse) GetQuotaWghSwt() float32 {
	if x != nil {
		return x.QuotaWghSwt
	}
	return 0
}

func (x *RM1OutsideWarehouse) GetContainerQtySwt() float32 {
	if x != nil {
		return x.ContainerQtySwt
	}
	return 0
}

var File_samantra_services_rm1_services_rm1_proto protoreflect.FileDescriptor

var file_samantra_services_rm1_services_rm1_proto_rawDesc = []byte{
	0x0a, 0x28, 0x73, 0x61, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2f, 0x72, 0x6d, 0x31, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x72, 0x6d, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x73, 0x61, 0x6d, 0x61,
	0x6e, 0x74, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x72, 0x6d,
	0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x64, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x53, 0x4c, 0x6f, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75,
	0x6f, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71,
	0x75, 0x6f, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x22, 0x59, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x53, 0x4c, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x40, 0x0a, 0x0a, 0x4f, 0x53, 0x4c, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x61, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x72, 0x6d, 0x31, 0x2e, 0x4f, 0x53,
	0x4c, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x4f, 0x53, 0x4c, 0x6f, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x09, 0x4f, 0x53, 0x4c, 0x6f, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x6f, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x4c, 0x6f, 0x74, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0c, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x2e, 0x0a, 0x12, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x49,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x4f, 0x4e, 0x4f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x50, 0x4f, 0x4e, 0x4f, 0x22, 0x71, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x4d, 0x31,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x14, 0x52, 0x4d, 0x31, 0x4f,
	0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x61, 0x6d, 0x61, 0x6e, 0x74, 0x72,
	0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x72, 0x6d, 0x31, 0x2e, 0x52,
	0x4d, 0x31, 0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x52, 0x14, 0x52, 0x4d, 0x31, 0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x57, 0x61,
	0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x73, 0x22, 0x97, 0x08, 0x0a, 0x13, 0x52, 0x4d, 0x31,
	0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x4f, 0x44, 0x6f, 0x63, 0x4e,
	0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x4f, 0x44, 0x6f, 0x63, 0x4e, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x4c, 0x6f, 0x74, 0x4e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x4c, 0x6f, 0x74, 0x4e, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2a, 0x0a, 0x10, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x56, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x56, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x56, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x56, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x51, 0x74, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x51, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x57, 0x67, 0x68,
	0x41, 0x67, 0x72, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x57, 0x67, 0x68, 0x41, 0x67, 0x72, 0x6f, 0x12, 0x2a, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x51, 0x74, 0x79, 0x41, 0x67, 0x72, 0x6f, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x10, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x51, 0x74, 0x79,
	0x41, 0x67, 0x72, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x54, 0x44, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x54, 0x44, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x45, 0x54, 0x41, 0x44, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x45, 0x54, 0x41, 0x44, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x61, 0x63, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x50, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x72, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6f, 0x72, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x56, 0x65, 0x73, 0x73, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x56, 0x65, 0x73, 0x73, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x57, 0x67, 0x68, 0x41, 0x71, 0x75, 0x61, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x57, 0x67, 0x68, 0x41, 0x71,
	0x75, 0x61, 0x12, 0x2a, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x51,
	0x74, 0x79, 0x41, 0x71, 0x75, 0x61, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x51, 0x74, 0x79, 0x41, 0x71, 0x75, 0x61, 0x12, 0x1e,
	0x0a, 0x0a, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x57, 0x67, 0x68, 0x50, 0x6f, 0x18, 0x1c, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0a, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x57, 0x67, 0x68, 0x50, 0x6f, 0x12, 0x26,
	0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x51, 0x74, 0x79, 0x50, 0x6f,
	0x18, 0x1d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x51, 0x74, 0x79, 0x50, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x57,
	0x67, 0x68, 0x53, 0x77, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x57, 0x67, 0x68, 0x53, 0x77, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x51, 0x74, 0x79, 0x53, 0x77, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0f, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x51, 0x74, 0x79, 0x53,
	0x77, 0x74, 0x32, 0xda, 0x01, 0x0a, 0x03, 0x52, 0x4d, 0x31, 0x12, 0x6c, 0x0a, 0x0d, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x53, 0x4c, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x2e, 0x73, 0x61,
	0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x72, 0x6d, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x53, 0x4c, 0x6f, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x73, 0x61, 0x6d, 0x61, 0x6e,
	0x74, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x72, 0x6d, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x53, 0x4c, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x57, 0x52, 0x4d, 0x31, 0x12, 0x2b, 0x2e, 0x73, 0x61, 0x6d, 0x61, 0x6e,
	0x74, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x72, 0x6d, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x53, 0x4c, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73, 0x61, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x72, 0x6d, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x4d, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x59, 0x5a, 0x57, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x69,
	0x74, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x69, 0x74, 0x2f, 0x73, 0x61, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x72, 0x6d, 0x31, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x3b, 0x72, 0x6d, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_samantra_services_rm1_services_rm1_proto_rawDescOnce sync.Once
	file_samantra_services_rm1_services_rm1_proto_rawDescData = file_samantra_services_rm1_services_rm1_proto_rawDesc
)

func file_samantra_services_rm1_services_rm1_proto_rawDescGZIP() []byte {
	file_samantra_services_rm1_services_rm1_proto_rawDescOnce.Do(func() {
		file_samantra_services_rm1_services_rm1_proto_rawDescData = protoimpl.X.CompressGZIP(file_samantra_services_rm1_services_rm1_proto_rawDescData)
	})
	return file_samantra_services_rm1_services_rm1_proto_rawDescData
}

var file_samantra_services_rm1_services_rm1_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_samantra_services_rm1_services_rm1_proto_goTypes = []interface{}{
	(*ListOSLotInfoRequest)(nil),  // 0: samantra.services.rm1.ListOSLotInfoRequest
	(*ListOSLotInfoResponse)(nil), // 1: samantra.services.rm1.ListOSLotInfoResponse
	(*OSLotInfo)(nil),             // 2: samantra.services.rm1.OSLotInfo
	(*ListRM1Response)(nil),       // 3: samantra.services.rm1.ListRM1Response
	(*RM1OutsideWarehouse)(nil),   // 4: samantra.services.rm1.RM1OutsideWarehouse
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_samantra_services_rm1_services_rm1_proto_depIdxs = []int32{
	5, // 0: samantra.services.rm1.ListOSLotInfoRequest.date:type_name -> google.protobuf.Timestamp
	2, // 1: samantra.services.rm1.ListOSLotInfoResponse.OSLotInfos:type_name -> samantra.services.rm1.OSLotInfo
	4, // 2: samantra.services.rm1.ListRM1Response.RM1OutsideWarehouses:type_name -> samantra.services.rm1.RM1OutsideWarehouse
	0, // 3: samantra.services.rm1.RM1.ListOSLotInfo:input_type -> samantra.services.rm1.ListOSLotInfoRequest
	0, // 4: samantra.services.rm1.RM1.GetListOWRM1:input_type -> samantra.services.rm1.ListOSLotInfoRequest
	1, // 5: samantra.services.rm1.RM1.ListOSLotInfo:output_type -> samantra.services.rm1.ListOSLotInfoResponse
	3, // 6: samantra.services.rm1.RM1.GetListOWRM1:output_type -> samantra.services.rm1.ListRM1Response
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_samantra_services_rm1_services_rm1_proto_init() }
func file_samantra_services_rm1_services_rm1_proto_init() {
	if File_samantra_services_rm1_services_rm1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_samantra_services_rm1_services_rm1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOSLotInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samantra_services_rm1_services_rm1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOSLotInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samantra_services_rm1_services_rm1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OSLotInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samantra_services_rm1_services_rm1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRM1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samantra_services_rm1_services_rm1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RM1OutsideWarehouse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_samantra_services_rm1_services_rm1_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_samantra_services_rm1_services_rm1_proto_goTypes,
		DependencyIndexes: file_samantra_services_rm1_services_rm1_proto_depIdxs,
		MessageInfos:      file_samantra_services_rm1_services_rm1_proto_msgTypes,
	}.Build()
	File_samantra_services_rm1_services_rm1_proto = out.File
	file_samantra_services_rm1_services_rm1_proto_rawDesc = nil
	file_samantra_services_rm1_services_rm1_proto_goTypes = nil
	file_samantra_services_rm1_services_rm1_proto_depIdxs = nil
}
