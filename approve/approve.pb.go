// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.17.3
// source: approve/approve.proto

package approve

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_approve_approve_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_approve_approve_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_approve_approve_proto_rawDescGZIP(), []int{0}
}

type InitApprovalOperationListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Menu string `protobuf:"bytes,2,opt,name=menu,proto3" json:"menu,omitempty"`
}

func (x *InitApprovalOperationListRequest) Reset() {
	*x = InitApprovalOperationListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_approve_approve_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitApprovalOperationListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitApprovalOperationListRequest) ProtoMessage() {}

func (x *InitApprovalOperationListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_approve_approve_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitApprovalOperationListRequest.ProtoReflect.Descriptor instead.
func (*InitApprovalOperationListRequest) Descriptor() ([]byte, []int) {
	return file_approve_approve_proto_rawDescGZIP(), []int{1}
}

func (x *InitApprovalOperationListRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InitApprovalOperationListRequest) GetMenu() string {
	if x != nil {
		return x.Menu
	}
	return ""
}

type InitApprovalOperationListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextRoles []string `protobuf:"bytes,1,rep,name=next_roles,json=nextRoles,proto3" json:"next_roles,omitempty"`
}

func (x *InitApprovalOperationListResponse) Reset() {
	*x = InitApprovalOperationListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_approve_approve_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitApprovalOperationListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitApprovalOperationListResponse) ProtoMessage() {}

func (x *InitApprovalOperationListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_approve_approve_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitApprovalOperationListResponse.ProtoReflect.Descriptor instead.
func (*InitApprovalOperationListResponse) Descriptor() ([]byte, []int) {
	return file_approve_approve_proto_rawDescGZIP(), []int{2}
}

func (x *InitApprovalOperationListResponse) GetNextRoles() []string {
	if x != nil {
		return x.NextRoles
	}
	return nil
}

type ApproveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Menu string `protobuf:"bytes,2,opt,name=menu,proto3" json:"menu,omitempty"`
}

func (x *ApproveRequest) Reset() {
	*x = ApproveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_approve_approve_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveRequest) ProtoMessage() {}

func (x *ApproveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_approve_approve_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveRequest.ProtoReflect.Descriptor instead.
func (*ApproveRequest) Descriptor() ([]byte, []int) {
	return file_approve_approve_proto_rawDescGZIP(), []int{3}
}

func (x *ApproveRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ApproveRequest) GetMenu() string {
	if x != nil {
		return x.Menu
	}
	return ""
}

type ApproveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Completed bool     `protobuf:"varint,1,opt,name=completed,proto3" json:"completed,omitempty"`
	NextRoles []string `protobuf:"bytes,2,rep,name=next_roles,json=nextRoles,proto3" json:"next_roles,omitempty"`
}

func (x *ApproveResponse) Reset() {
	*x = ApproveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_approve_approve_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveResponse) ProtoMessage() {}

func (x *ApproveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_approve_approve_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveResponse.ProtoReflect.Descriptor instead.
func (*ApproveResponse) Descriptor() ([]byte, []int) {
	return file_approve_approve_proto_rawDescGZIP(), []int{4}
}

func (x *ApproveResponse) GetCompleted() bool {
	if x != nil {
		return x.Completed
	}
	return false
}

func (x *ApproveResponse) GetNextRoles() []string {
	if x != nil {
		return x.NextRoles
	}
	return nil
}

type RejectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Menu   string `protobuf:"bytes,2,opt,name=menu,proto3" json:"menu,omitempty"`
	Remark string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *RejectRequest) Reset() {
	*x = RejectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_approve_approve_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectRequest) ProtoMessage() {}

func (x *RejectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_approve_approve_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectRequest.ProtoReflect.Descriptor instead.
func (*RejectRequest) Descriptor() ([]byte, []int) {
	return file_approve_approve_proto_rawDescGZIP(), []int{5}
}

func (x *RejectRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RejectRequest) GetMenu() string {
	if x != nil {
		return x.Menu
	}
	return ""
}

func (x *RejectRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type AcknowledgeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextRoles []string `protobuf:"bytes,1,rep,name=next_roles,json=nextRoles,proto3" json:"next_roles,omitempty"`
}

func (x *AcknowledgeResponse) Reset() {
	*x = AcknowledgeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_approve_approve_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcknowledgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcknowledgeResponse) ProtoMessage() {}

func (x *AcknowledgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_approve_approve_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcknowledgeResponse.ProtoReflect.Descriptor instead.
func (*AcknowledgeResponse) Descriptor() ([]byte, []int) {
	return file_approve_approve_proto_rawDescGZIP(), []int{6}
}

func (x *AcknowledgeResponse) GetNextRoles() []string {
	if x != nil {
		return x.NextRoles
	}
	return nil
}

type ApprovalOperationListByMenuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Menu string `protobuf:"bytes,1,opt,name=menu,proto3" json:"menu,omitempty"`
}

func (x *ApprovalOperationListByMenuRequest) Reset() {
	*x = ApprovalOperationListByMenuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_approve_approve_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApprovalOperationListByMenuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApprovalOperationListByMenuRequest) ProtoMessage() {}

func (x *ApprovalOperationListByMenuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_approve_approve_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApprovalOperationListByMenuRequest.ProtoReflect.Descriptor instead.
func (*ApprovalOperationListByMenuRequest) Descriptor() ([]byte, []int) {
	return file_approve_approve_proto_rawDescGZIP(), []int{7}
}

func (x *ApprovalOperationListByMenuRequest) GetMenu() string {
	if x != nil {
		return x.Menu
	}
	return ""
}

type ApprovalOperationListByMenuResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApprovalOperationListByMenu []*ApprovalOperation `protobuf:"bytes,1,rep,name=ApprovalOperationListByMenu,proto3" json:"ApprovalOperationListByMenu,omitempty"`
}

func (x *ApprovalOperationListByMenuResponse) Reset() {
	*x = ApprovalOperationListByMenuResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_approve_approve_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApprovalOperationListByMenuResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApprovalOperationListByMenuResponse) ProtoMessage() {}

func (x *ApprovalOperationListByMenuResponse) ProtoReflect() protoreflect.Message {
	mi := &file_approve_approve_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApprovalOperationListByMenuResponse.ProtoReflect.Descriptor instead.
func (*ApprovalOperationListByMenuResponse) Descriptor() ([]byte, []int) {
	return file_approve_approve_proto_rawDescGZIP(), []int{8}
}

func (x *ApprovalOperationListByMenuResponse) GetApprovalOperationListByMenu() []*ApprovalOperation {
	if x != nil {
		return x.ApprovalOperationListByMenu
	}
	return nil
}

type ApprovalOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           int64                  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	DocumentId   string                 `protobuf:"bytes,2,opt,name=DocumentId,proto3" json:"DocumentId,omitempty"`
	Menu         string                 `protobuf:"bytes,3,opt,name=Menu,proto3" json:"Menu,omitempty"`
	Role         string                 `protobuf:"bytes,4,opt,name=Role,proto3" json:"Role,omitempty"`
	ApprovalType string                 `protobuf:"bytes,5,opt,name=ApprovalType,proto3" json:"ApprovalType,omitempty"`
	IsChildRole  bool                   `protobuf:"varint,6,opt,name=IsChildRole,proto3" json:"IsChildRole,omitempty"`
	ApprovedBy   string                 `protobuf:"bytes,7,opt,name=ApprovedBy,proto3" json:"ApprovedBy,omitempty"`
	ApprovedAt   *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=ApprovedAt,proto3" json:"ApprovedAt,omitempty"`
}

func (x *ApprovalOperation) Reset() {
	*x = ApprovalOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_approve_approve_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApprovalOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApprovalOperation) ProtoMessage() {}

func (x *ApprovalOperation) ProtoReflect() protoreflect.Message {
	mi := &file_approve_approve_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApprovalOperation.ProtoReflect.Descriptor instead.
func (*ApprovalOperation) Descriptor() ([]byte, []int) {
	return file_approve_approve_proto_rawDescGZIP(), []int{9}
}

func (x *ApprovalOperation) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *ApprovalOperation) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

func (x *ApprovalOperation) GetMenu() string {
	if x != nil {
		return x.Menu
	}
	return ""
}

func (x *ApprovalOperation) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *ApprovalOperation) GetApprovalType() string {
	if x != nil {
		return x.ApprovalType
	}
	return ""
}

func (x *ApprovalOperation) GetIsChildRole() bool {
	if x != nil {
		return x.IsChildRole
	}
	return false
}

func (x *ApprovalOperation) GetApprovedBy() string {
	if x != nil {
		return x.ApprovedBy
	}
	return ""
}

func (x *ApprovalOperation) GetApprovedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ApprovedAt
	}
	return nil
}

type ApproveEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Menu string `protobuf:"bytes,1,opt,name=menu,proto3" json:"menu,omitempty"`
}

func (x *ApproveEventRequest) Reset() {
	*x = ApproveEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_approve_approve_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveEventRequest) ProtoMessage() {}

func (x *ApproveEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_approve_approve_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveEventRequest.ProtoReflect.Descriptor instead.
func (*ApproveEventRequest) Descriptor() ([]byte, []int) {
	return file_approve_approve_proto_rawDescGZIP(), []int{10}
}

func (x *ApproveEventRequest) GetMenu() string {
	if x != nil {
		return x.Menu
	}
	return ""
}

type ApproveEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApproveEventList       []*ApproveEvent         `protobuf:"bytes,1,rep,name=ApproveEventList,proto3" json:"ApproveEventList,omitempty"`
	ApproveOutsideReceiver *ApproveOutsideReceiver `protobuf:"bytes,2,opt,name=ApproveOutsideReceiver,proto3" json:"ApproveOutsideReceiver,omitempty"`
}

func (x *ApproveEventResponse) Reset() {
	*x = ApproveEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_approve_approve_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveEventResponse) ProtoMessage() {}

func (x *ApproveEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_approve_approve_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveEventResponse.ProtoReflect.Descriptor instead.
func (*ApproveEventResponse) Descriptor() ([]byte, []int) {
	return file_approve_approve_proto_rawDescGZIP(), []int{11}
}

func (x *ApproveEventResponse) GetApproveEventList() []*ApproveEvent {
	if x != nil {
		return x.ApproveEventList
	}
	return nil
}

func (x *ApproveEventResponse) GetApproveOutsideReceiver() *ApproveOutsideReceiver {
	if x != nil {
		return x.ApproveOutsideReceiver
	}
	return nil
}

type ApproveEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            int64                  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Role          string                 `protobuf:"bytes,2,opt,name=Role,proto3" json:"Role,omitempty"`
	EffectiveDate *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=EffectiveDate,proto3" json:"EffectiveDate,omitempty"`
	Menu          string                 `protobuf:"bytes,4,opt,name=Menu,proto3" json:"Menu,omitempty"`
	Type          string                 `protobuf:"bytes,5,opt,name=Type,proto3" json:"Type,omitempty"`
	Level         int64                  `protobuf:"varint,6,opt,name=Level,proto3" json:"Level,omitempty"`
	IsChildRole   bool                   `protobuf:"varint,7,opt,name=IsChildRole,proto3" json:"IsChildRole,omitempty"`
	UserID        []string               `protobuf:"bytes,8,rep,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *ApproveEvent) Reset() {
	*x = ApproveEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_approve_approve_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveEvent) ProtoMessage() {}

func (x *ApproveEvent) ProtoReflect() protoreflect.Message {
	mi := &file_approve_approve_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveEvent.ProtoReflect.Descriptor instead.
func (*ApproveEvent) Descriptor() ([]byte, []int) {
	return file_approve_approve_proto_rawDescGZIP(), []int{12}
}

func (x *ApproveEvent) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *ApproveEvent) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *ApproveEvent) GetEffectiveDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EffectiveDate
	}
	return nil
}

func (x *ApproveEvent) GetMenu() string {
	if x != nil {
		return x.Menu
	}
	return ""
}

func (x *ApproveEvent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ApproveEvent) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *ApproveEvent) GetIsChildRole() bool {
	if x != nil {
		return x.IsChildRole
	}
	return false
}

func (x *ApproveEvent) GetUserID() []string {
	if x != nil {
		return x.UserID
	}
	return nil
}

type ApproveOutsideReceiver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                      int64                  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Menu                    string                 `protobuf:"bytes,2,opt,name=Menu,proto3" json:"Menu,omitempty"`
	UserID                  []string               `protobuf:"bytes,3,rep,name=UserID,proto3" json:"UserID,omitempty"`
	ApproveEffectiveDatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=ApproveEffectiveDatedAt,proto3" json:"ApproveEffectiveDatedAt,omitempty"`
}

func (x *ApproveOutsideReceiver) Reset() {
	*x = ApproveOutsideReceiver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_approve_approve_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveOutsideReceiver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveOutsideReceiver) ProtoMessage() {}

func (x *ApproveOutsideReceiver) ProtoReflect() protoreflect.Message {
	mi := &file_approve_approve_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveOutsideReceiver.ProtoReflect.Descriptor instead.
func (*ApproveOutsideReceiver) Descriptor() ([]byte, []int) {
	return file_approve_approve_proto_rawDescGZIP(), []int{13}
}

func (x *ApproveOutsideReceiver) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *ApproveOutsideReceiver) GetMenu() string {
	if x != nil {
		return x.Menu
	}
	return ""
}

func (x *ApproveOutsideReceiver) GetUserID() []string {
	if x != nil {
		return x.UserID
	}
	return nil
}

func (x *ApproveOutsideReceiver) GetApproveEffectiveDatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ApproveEffectiveDatedAt
	}
	return nil
}

var File_approve_approve_proto protoreflect.FileDescriptor

var file_approve_approve_proto_rawDesc = []byte{
	0x0a, 0x15, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x46, 0x0a, 0x20, 0x49, 0x6e,
	0x69, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65,
	0x6e, 0x75, 0x22, 0x42, 0x0a, 0x21, 0x49, 0x6e, 0x69, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x78,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x34, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6e, 0x75,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x22, 0x4e, 0x0a, 0x0f,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x4b, 0x0a, 0x0d,
	0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6d, 0x65, 0x6e, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6e,
	0x75, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x34, 0x0a, 0x13, 0x41, 0x63, 0x6b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x22,
	0x38, 0x0a, 0x22, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x22, 0x83, 0x01, 0x0a, 0x23, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5c, 0x0a, 0x1b, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x4d, 0x65, 0x6e, 0x75,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x1b, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x22,
	0x8d, 0x02, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x52,
	0x6f, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x64, 0x42, 0x79, 0x12, 0x3a, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x29, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x22, 0xb2, 0x01, 0x0a, 0x14, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x10, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x10, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x16, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x22,
	0xec, 0x01, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x40, 0x0a, 0x0d, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x52,
	0x6f, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x43, 0x68, 0x69,
	0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0xaa,
	0x01, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x4f, 0x75, 0x74, 0x73, 0x69, 0x64,
	0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x65, 0x6e,
	0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x54, 0x0a, 0x17, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x17, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x32, 0xbb, 0x05, 0x0a, 0x07,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x12, 0x74, 0x0a, 0x19, 0x49, 0x6e, 0x69, 0x74, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x2e, 0x49,
	0x6e, 0x69, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2a, 0x2e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a,
	0x21, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x69, 0x74, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x2e, 0x49, 0x6e, 0x69,
	0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e,
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x3e, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x2e, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x46, 0x0a, 0x0b, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x12, 0x17,
	0x2e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x2e, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x06, 0x52, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x61, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x19, 0x52,
	0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0e, 0x2e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x1b, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x4d, 0x65,
	0x6e, 0x75, 0x12, 0x2b, 0x2e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x2e, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x79, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x58, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x46, 0x5a, 0x44, 0x67, 0x69, 0x74,
	0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x69, 0x74, 0x64, 0x69, 0x67, 0x69, 0x74,
	0x61, 0x6c, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x67, 0x72, 0x70, 0x63, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x69,
	0x74, 0x2f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x3b, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_approve_approve_proto_rawDescOnce sync.Once
	file_approve_approve_proto_rawDescData = file_approve_approve_proto_rawDesc
)

func file_approve_approve_proto_rawDescGZIP() []byte {
	file_approve_approve_proto_rawDescOnce.Do(func() {
		file_approve_approve_proto_rawDescData = protoimpl.X.CompressGZIP(file_approve_approve_proto_rawDescData)
	})
	return file_approve_approve_proto_rawDescData
}

var file_approve_approve_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_approve_approve_proto_goTypes = []interface{}{
	(*Empty)(nil),                               // 0: approve.Empty
	(*InitApprovalOperationListRequest)(nil),    // 1: approve.InitApprovalOperationListRequest
	(*InitApprovalOperationListResponse)(nil),   // 2: approve.InitApprovalOperationListResponse
	(*ApproveRequest)(nil),                      // 3: approve.ApproveRequest
	(*ApproveResponse)(nil),                     // 4: approve.ApproveResponse
	(*RejectRequest)(nil),                       // 5: approve.RejectRequest
	(*AcknowledgeResponse)(nil),                 // 6: approve.AcknowledgeResponse
	(*ApprovalOperationListByMenuRequest)(nil),  // 7: approve.ApprovalOperationListByMenuRequest
	(*ApprovalOperationListByMenuResponse)(nil), // 8: approve.ApprovalOperationListByMenuResponse
	(*ApprovalOperation)(nil),                   // 9: approve.ApprovalOperation
	(*ApproveEventRequest)(nil),                 // 10: approve.ApproveEventRequest
	(*ApproveEventResponse)(nil),                // 11: approve.ApproveEventResponse
	(*ApproveEvent)(nil),                        // 12: approve.ApproveEvent
	(*ApproveOutsideReceiver)(nil),              // 13: approve.ApproveOutsideReceiver
	(*timestamppb.Timestamp)(nil),               // 14: google.protobuf.Timestamp
}
var file_approve_approve_proto_depIdxs = []int32{
	9,  // 0: approve.ApprovalOperationListByMenuResponse.ApprovalOperationListByMenu:type_name -> approve.ApprovalOperation
	14, // 1: approve.ApprovalOperation.ApprovedAt:type_name -> google.protobuf.Timestamp
	12, // 2: approve.ApproveEventResponse.ApproveEventList:type_name -> approve.ApproveEvent
	13, // 3: approve.ApproveEventResponse.ApproveOutsideReceiver:type_name -> approve.ApproveOutsideReceiver
	14, // 4: approve.ApproveEvent.EffectiveDate:type_name -> google.protobuf.Timestamp
	14, // 5: approve.ApproveOutsideReceiver.ApproveEffectiveDatedAt:type_name -> google.protobuf.Timestamp
	1,  // 6: approve.Approve.InitApprovalOperationList:input_type -> approve.InitApprovalOperationListRequest
	1,  // 7: approve.Approve.RollbackInitApprovalOperationList:input_type -> approve.InitApprovalOperationListRequest
	3,  // 8: approve.Approve.Approve:input_type -> approve.ApproveRequest
	3,  // 9: approve.Approve.Acknowledge:input_type -> approve.ApproveRequest
	5,  // 10: approve.Approve.Reject:input_type -> approve.RejectRequest
	3,  // 11: approve.Approve.RollbackApprovalOperation:input_type -> approve.ApproveRequest
	7,  // 12: approve.Approve.ApprovalOperationListByMenu:input_type -> approve.ApprovalOperationListByMenuRequest
	10, // 13: approve.Approve.GetCurrentApprovalEvent:input_type -> approve.ApproveEventRequest
	2,  // 14: approve.Approve.InitApprovalOperationList:output_type -> approve.InitApprovalOperationListResponse
	0,  // 15: approve.Approve.RollbackInitApprovalOperationList:output_type -> approve.Empty
	4,  // 16: approve.Approve.Approve:output_type -> approve.ApproveResponse
	6,  // 17: approve.Approve.Acknowledge:output_type -> approve.AcknowledgeResponse
	0,  // 18: approve.Approve.Reject:output_type -> approve.Empty
	0,  // 19: approve.Approve.RollbackApprovalOperation:output_type -> approve.Empty
	8,  // 20: approve.Approve.ApprovalOperationListByMenu:output_type -> approve.ApprovalOperationListByMenuResponse
	11, // 21: approve.Approve.GetCurrentApprovalEvent:output_type -> approve.ApproveEventResponse
	14, // [14:22] is the sub-list for method output_type
	6,  // [6:14] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_approve_approve_proto_init() }
func file_approve_approve_proto_init() {
	if File_approve_approve_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_approve_approve_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_approve_approve_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitApprovalOperationListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_approve_approve_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitApprovalOperationListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_approve_approve_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_approve_approve_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_approve_approve_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_approve_approve_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcknowledgeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_approve_approve_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApprovalOperationListByMenuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_approve_approve_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApprovalOperationListByMenuResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_approve_approve_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApprovalOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_approve_approve_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_approve_approve_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_approve_approve_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_approve_approve_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveOutsideReceiver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_approve_approve_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_approve_approve_proto_goTypes,
		DependencyIndexes: file_approve_approve_proto_depIdxs,
		MessageInfos:      file_approve_approve_proto_msgTypes,
	}.Build()
	File_approve_approve_proto = out.File
	file_approve_approve_proto_rawDesc = nil
	file_approve_approve_proto_goTypes = nil
	file_approve_approve_proto_depIdxs = nil
}
